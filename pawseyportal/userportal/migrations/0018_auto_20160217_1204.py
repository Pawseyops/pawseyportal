# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-17 04:04
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('userportal', '0017_auto_20160211_1051'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, help_text=b'Internal Comment about the Project or Allocation', null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='allocation',
            name='allocation_round',
            field=models.ForeignKey(help_text=b'Allocation round that this allocation comes under', on_delete=django.db.models.deletion.CASCADE, to='userportal.AllocationRound'),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='end',
            field=models.DateField(help_text=b'The end date of this allocation'),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='name',
            field=models.CharField(help_text=b'Name of the allocation', max_length=256),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='permanent',
            field=models.BooleanField(default=False, help_text=b'Tick if this allocation is perpetual'),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='priorityArea',
            field=models.ForeignKey(blank=True, help_text=b'Priority area that this allocation comes under', null=True, on_delete=django.db.models.deletion.CASCADE, to='userportal.PriorityArea', verbose_name=b'Priority Area'),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='project',
            field=models.ForeignKey(help_text=b'The project that this allocation is for', on_delete=django.db.models.deletion.CASCADE, to='userportal.Project'),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='service',
            field=models.ForeignKey(help_text=b'Service which this allocation is for', on_delete=django.db.models.deletion.CASCADE, to='userportal.Service'),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='serviceunits',
            field=models.IntegerField(blank=True, help_text=b'Number of service units that were awarded to this allocation (to be interpreted by the systems)', null=True),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='start',
            field=models.DateField(help_text=b'The start date of this allocation'),
        ),
        migrations.AlterField(
            model_name='allocation',
            name='suspend',
            field=models.BooleanField(default=False, help_text=b'Tick to suspend allocation'),
        ),
        migrations.AlterField(
            model_name='allocationfilesystem',
            name='allocation',
            field=models.ForeignKey(help_text=b'Allocation this applies to', on_delete=django.db.models.deletion.CASCADE, to='userportal.Allocation'),
        ),
        migrations.AlterField(
            model_name='allocationfilesystem',
            name='filesystem',
            field=models.ForeignKey(help_text=b'Filesystem that this applies to', on_delete=django.db.models.deletion.CASCADE, to='userportal.Filesystem'),
        ),
        migrations.AlterField(
            model_name='allocationfilesystem',
            name='quota',
            field=models.IntegerField(default=0, help_text=b'Quota of this allocation on this filesystem'),
        ),
        migrations.AlterField(
            model_name='allocationround',
            name='end_date',
            field=models.DateField(help_text=b'The end date of the allocation round'),
        ),
        migrations.AlterField(
            model_name='allocationround',
            name='name',
            field=models.CharField(blank=True, help_text=b'The name given to the allocation round', max_length=512, null=True),
        ),
        migrations.AlterField(
            model_name='allocationround',
            name='priority_area',
            field=models.ManyToManyField(help_text=b'The priority areas served by this allocation round', to='userportal.PriorityArea'),
        ),
        migrations.AlterField(
            model_name='allocationround',
            name='start_date',
            field=models.DateField(help_text=b'The start date of the allocation round'),
        ),
        migrations.AlterField(
            model_name='allocationround',
            name='system',
            field=models.ForeignKey(help_text=b'The service that the allocation round provides', on_delete=django.db.models.deletion.CASCADE, to='userportal.Service'),
        ),
        migrations.AlterField(
            model_name='filesystem',
            name='name',
            field=models.CharField(help_text=b'Name of the filesystem', max_length=32),
        ),
        migrations.AlterField(
            model_name='filesystem',
            name='quotad',
            field=models.BooleanField(default=False, help_text=b'Tick if this filesystem has a quota on it'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='name',
            field=models.CharField(help_text=b'The name of the institution', max_length=256),
        ),
        migrations.AlterField(
            model_name='institution',
            name='partner',
            field=models.BooleanField(default=False, help_text=b'Tick if the institution is a partner organisation'),
        ),
        migrations.AlterField(
            model_name='person',
            name='accountCreatedEmailOn',
            field=models.DateTimeField(blank=True, help_text=b'The date the person was emailed to tell them their account was ready', null=True, verbose_name=b'Account Created Email On'),
        ),
        migrations.AlterField(
            model_name='person',
            name='accountCreatedOn',
            field=models.DateTimeField(blank=True, help_text=b'The date that the account was created', null=True, verbose_name=b'Account Created On'),
        ),
        migrations.AlterField(
            model_name='person',
            name='accountEmailHash',
            field=models.CharField(blank=True, help_text=b'The uuid used to identify the account in the email sent out for requesting details', max_length=50, null=True, verbose_name=b'Account Email Hash'),
        ),
        migrations.AlterField(
            model_name='person',
            name='accountEmailOn',
            field=models.DateTimeField(blank=True, help_text=b'The date that the email was sent out to request details for account creation', null=True, verbose_name=b'Account Creation Email On'),
        ),
        migrations.AlterField(
            model_name='person',
            name='firstName',
            field=models.CharField(help_text=b'The first name of the person', max_length=32, verbose_name=b'First Name'),
        ),
        migrations.AlterField(
            model_name='person',
            name='institution',
            field=models.ForeignKey(help_text=b'The institution that the person belongs to', on_delete=django.db.models.deletion.CASCADE, to='userportal.Institution'),
        ),
        migrations.AlterField(
            model_name='person',
            name='institutionEmail',
            field=models.EmailField(help_text=b'The instituion based email address of the person', max_length=64, verbose_name=b'Institution Email'),
        ),
        migrations.AlterField(
            model_name='person',
            name='mobilePhone',
            field=models.CharField(blank=True, help_text=b'The mobile phone number of the person', max_length=32, null=True, verbose_name=b'Mobile Phone'),
        ),
        migrations.AlterField(
            model_name='person',
            name='personAccount',
            field=models.ForeignKey(blank=True, help_text=b'The account information for the person', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person', to='userportal.PersonAccount'),
        ),
        migrations.AlterField(
            model_name='person',
            name='phone',
            field=models.CharField(blank=True, help_text=b'The phone number of the person', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='preferredEmail',
            field=models.EmailField(blank=True, help_text=b'The alternate email address of the person', max_length=64, null=True, verbose_name=b'Alternative Email'),
        ),
        migrations.AlterField(
            model_name='person',
            name='status',
            field=models.ForeignKey(default=1, help_text=b'The status of the person', on_delete=django.db.models.deletion.CASCADE, to='userportal.PersonStatus'),
        ),
        migrations.AlterField(
            model_name='person',
            name='student',
            field=models.BooleanField(default=False, help_text=b'Tick if the person is a student'),
        ),
        migrations.AlterField(
            model_name='person',
            name='surname',
            field=models.CharField(help_text=b'The surname of the person', max_length=32),
        ),
        migrations.AlterField(
            model_name='personaccount',
            name='gidNumber',
            field=models.IntegerField(blank=True, help_text=b'The gid number of the account', null=True),
        ),
        migrations.AlterField(
            model_name='personaccount',
            name='passwordHash',
            field=models.CharField(blank=True, help_text=b'The hashed initial password of the account (not the current password in most cases, should have been changed)', max_length=256, null=True, verbose_name=b'password'),
        ),
        migrations.AlterField(
            model_name='personaccount',
            name='uid',
            field=models.CharField(blank=True, help_text=b'The user id of the account', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='personaccount',
            name='uidNumber',
            field=models.IntegerField(blank=True, help_text=b'The uid number of the account', null=True),
        ),
        migrations.AlterField(
            model_name='personstatus',
            name='description',
            field=models.CharField(blank=True, help_text=b'Description of this status and what it is used for', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='personstatus',
            name='name',
            field=models.CharField(help_text=b'The name of the status that can be assigned to a person', max_length=50),
        ),
        migrations.AlterField(
            model_name='priorityarea',
            name='code',
            field=models.CharField(help_text=b'The code of the priority area, used by systems', max_length=256),
        ),
        migrations.AlterField(
            model_name='priorityarea',
            name='name',
            field=models.CharField(help_text=b'The name of the priority area', max_length=256),
        ),
        migrations.AlterField(
            model_name='project',
            name='code',
            field=models.CharField(blank=True, help_text=b'Project code of the project for use on systems', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='people',
            field=models.ManyToManyField(help_text=b'The people taking part in the project', to='userportal.Person'),
        ),
        migrations.AlterField(
            model_name='project',
            name='principalInvestigator',
            field=models.ForeignKey(help_text=b'Principal Investigator of the project', on_delete=django.db.models.deletion.CASCADE, related_name='pi', to='userportal.Person', verbose_name=b'Principal Investigator'),
        ),
        migrations.AlterField(
            model_name='project',
            name='summary',
            field=models.TextField(blank=True, help_text=b'Summary of the project as provided in the proposal', null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='title',
            field=models.CharField(help_text=b'Title of the project', max_length=1024),
        ),
        migrations.AlterField(
            model_name='service',
            name='name',
            field=models.CharField(help_text=b'The name of your service', max_length=256),
        ),
        migrations.AlterField(
            model_name='service',
            name='type',
            field=models.ForeignKey(help_text=b'The type of service this is (defined in the Service Type Model', on_delete=django.db.models.deletion.CASCADE, to='userportal.ServiceType'),
        ),
        migrations.AlterField(
            model_name='servicetype',
            name='helpEmail',
            field=models.EmailField(help_text=b'The email address users should send help requests to', max_length=254),
        ),
        migrations.AlterField(
            model_name='servicetype',
            name='name',
            field=models.CharField(help_text=b'The name of your service type', max_length=256),
        ),
        migrations.AddField(
            model_name='comment',
            name='allocation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='allocation', to='userportal.Allocation'),
        ),
        migrations.AddField(
            model_name='comment',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project', to='userportal.Project'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
    ]
